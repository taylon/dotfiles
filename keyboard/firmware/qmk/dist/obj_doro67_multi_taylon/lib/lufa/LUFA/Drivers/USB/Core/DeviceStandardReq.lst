   1               		.file	"DeviceStandardReq.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.USB_Device_ProcessControlRequest,"ax",@progbits
  11               	.global	USB_Device_ProcessControlRequest
  13               	USB_Device_ProcessControlRequest:
  14               	.LFB85:
  15               		.file 1 "lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c"
   1:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #include "USBMode.h"
  33:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  34:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if defined(USB_CAN_BE_DEVICE)
  35:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  36:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #define  __INCLUDE_FROM_DEVICESTDREQ_C
  37:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #include "DeviceStandardReq.h"
  38:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** uint8_t USB_Device_ConfigurationNumber;
  40:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  41:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_DEVICE_SELF_POWER)
  42:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** bool    USB_Device_CurrentlySelfPowered;
  43:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #endif
  44:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  45:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_DEVICE_REMOTE_WAKEUP)
  46:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** bool    USB_Device_RemoteWakeupEnabled;
  47:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #endif
  48:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  49:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** void USB_Device_ProcessControlRequest(void)
  50:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
  16               		.loc 1 50 0
  17               		.cfi_startproc
  18 0000 1F93      		push r17
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 17, -2
  22 0002 CF93      		push r28
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 28, -3
  26 0004 DF93      		push r29
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 29, -4
  30 0006 CDB7      		in r28,__SP_L__
  31 0008 DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34 000a AA97      		sbiw r28,42
  35               	.LCFI4:
  36               		.cfi_def_cfa_offset 47
  37 000c 0FB6      		in __tmp_reg__,__SREG__
  38 000e F894      		cli
  39 0010 DEBF      		out __SP_H__,r29
  40 0012 0FBE      		out __SREG__,__tmp_reg__
  41 0014 CDBF      		out __SP_L__,r28
  42               	/* prologue: function */
  43               	/* frame size = 42 */
  44               	/* stack size = 45 */
  45               	.L__stack_usage = 45
  46               	.LVL0:
  47               		.loc 1 50 0
  48 0016 E0E0      		ldi r30,lo8(USB_ControlRequest)
  49 0018 F0E0      		ldi r31,hi8(USB_ControlRequest)
  50 001a 88E0      		ldi r24,lo8(8)
  51 001c 8E0F      		add r24,r30
  52               	.LVL1:
  53               	.L2:
  54               	.LBB172:
  55               	.LBB173:
  56               	.LBB174:
  57               		.file 2 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
  58               		.loc 2 542 0 discriminator 3
  59 001e 9091 F100 		lds r25,241
  60               	.LBE174:
  61               	.LBE173:
  51:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_BIG_ENDIAN)
  52:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.bmRequestType = Endpoint_Read_8();
  53:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.bRequest      = Endpoint_Read_8();
  54:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wValue        = Endpoint_Read_16_LE();
  55:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wIndex        = Endpoint_Read_16_LE();
  56:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
  57:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
  58:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;
  59:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  60:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeade
  61:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  *(RequestHeader++) = Endpoint_Read_8();
  62               		.loc 1 61 0 discriminator 3
  63 0022 9193      		st Z+,r25
  64               	.LVL2:
  60:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  *(RequestHeader++) = Endpoint_Read_8();
  65               		.loc 1 60 0 discriminator 3
  66 0024 8E13      		cpse r24,r30
  67 0026 00C0      		rjmp .L2
  68               	.LBE172:
  62:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
  63:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  64:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ControlRequest();
  69               		.loc 1 64 0
  70 0028 0E94 0000 		call EVENT_USB_Device_ControlRequest
  71               	.LVL3:
  72               	.LBB175:
  73               	.LBB176:
 431:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
  74               		.loc 2 431 0
  75 002c 8091 E800 		lds r24,232
  76               	.LBE176:
  77               	.LBE175:
  65:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  66:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
  78               		.loc 1 66 0
  79 0030 83FF      		sbrs r24,3
  80 0032 00C0      		rjmp .L3
  81               	.LBB177:
  67:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
  68:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		uint8_t bmRequestType = USB_ControlRequest.bmRequestType;
  82               		.loc 1 68 0
  83 0034 8091 0000 		lds r24,USB_ControlRequest
  84               	.LVL4:
  69:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  70:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		switch (USB_ControlRequest.bRequest)
  85               		.loc 1 70 0
  86 0038 9091 0000 		lds r25,USB_ControlRequest+1
  87 003c 492F      		mov r20,r25
  88 003e 50E0      		ldi r21,0
  89 0040 4A30      		cpi r20,10
  90 0042 5105      		cpc r21,__zero_reg__
  91 0044 00F0      		brlo .+2
  92 0046 00C0      		rjmp .L3
  93 0048 FA01      		movw r30,r20
  94 004a E050      		subi r30,lo8(-(gs(.L5)))
  95 004c F040      		sbci r31,hi8(-(gs(.L5)))
  96 004e 0C94 0000 		jmp __tablejump2__
  97               		.section	.progmem.gcc_sw_table.USB_Device_ProcessControlRequest,"a",@progbits
  98               		.p2align	1
  99               	.L5:
 100 0000 0000      		.word gs(.L4)
 101 0002 0000      		.word gs(.L6)
 102 0004 0000      		.word gs(.L3)
 103 0006 0000      		.word gs(.L6)
 104 0008 0000      		.word gs(.L3)
 105 000a 0000      		.word gs(.L7)
 106 000c 0000      		.word gs(.L8)
 107 000e 0000      		.word gs(.L3)
 108 0010 0000      		.word gs(.L9)
 109 0012 0000      		.word gs(.L10)
 110               		.section	.text.USB_Device_ProcessControlRequest
 111               	.L4:
  71:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		{
  72:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetStatus:
  73:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 112               		.loc 1 73 0
 113 0052 8038      		cpi r24,lo8(-128)
 114 0054 01F0      		breq .L11
 115               		.loc 1 73 0 is_stmt 0 discriminator 1
 116 0056 8238      		cpi r24,lo8(-126)
 117 0058 01F0      		breq .+2
 118 005a 00C0      		rjmp .L3
 119 005c 00C0      		rjmp .L65
 120               	.L11:
 121               	.LVL5:
 122               	.LBB178:
 123               	.LBB179:
  74:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT)))
  75:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
  76:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_GetStatus();
  77:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
  78:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  79:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  80:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_ClearFeature:
  81:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetFeature:
  82:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
  83:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_ENDPOINT)))
  84:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
  85:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_ClearSetFeature();
  86:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
  87:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  88:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  89:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetAddress:
  90:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
  91:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetAddress();
  92:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  93:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  94:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetDescriptor:
  95:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
  96:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_INTERFACE)))
  97:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
  98:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_GetDescriptor();
  99:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
 100:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 101:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 102:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetConfiguration:
 103:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
 104:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_GetConfiguration();
 105:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 106:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 107:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetConfiguration:
 108:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 109:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetConfiguration();
 110:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 111:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 112:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 113:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			default:
 114:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 115:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		}
 116:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 117:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 118:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
 119:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 120:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		Endpoint_ClearSETUP();
 121:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		Endpoint_StallTransaction();
 122:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 123:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 124:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 125:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_SetAddress(void)
 126:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 127:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t DeviceAddress = (USB_ControlRequest.wValue & 0x7F);
 128:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 129:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_SetDeviceAddress(DeviceAddress);
 130:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 131:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 132:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 133:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 134:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 135:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	while (!(Endpoint_IsINReady()));
 136:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 137:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_EnableDeviceAddress(DeviceAddress);
 138:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 139:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
 140:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 141:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 142:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_SetConfiguration(void)
 143:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 144:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(FIXED_NUM_CONFIGURATIONS)
 145:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
 146:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 147:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 148:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Descriptor_Device_t* DevDescriptorPtr;
 149:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 150:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 151:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#if defined(USE_FLASH_DESCRIPTORS)
 152:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_FLASH
 153:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#elif defined(USE_EEPROM_DESCRIPTORS)
 154:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_EEPROM
 155:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#elif defined(USE_RAM_DESCRIPTORS)
 156:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_RAM
 157:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#else
 158:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			uint8_t MemoryAddressSpace;
 159:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 160:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 161:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 162:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (CALLBACK_USB_GetDescriptor((DTYPE_Device << 8), 0, (void*)&DevDescriptorPtr
 163:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 164:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 165:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                               , &MemoryAddressSpace
 166:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 167:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                               ) == NO_DESCRIPTOR)
 168:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 169:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 170:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 171:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 172:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 173:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (MemoryAddressSpace == MEMSPACE_FLASH)
 174:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 175:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		if (((uint8_t)USB_ControlRequest.wValue > pgm_read_byte(&DevDescriptorPtr->NumberOfConfigurations
 176:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 177:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 178:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else if (MemoryAddressSpace == MEMSPACE_EEPROM)
 179:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 180:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		if (((uint8_t)USB_ControlRequest.wValue > eeprom_read_byte(&DevDescriptorPtr->NumberOfConfigurati
 181:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 182:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 183:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else
 184:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 185:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		if ((uint8_t)USB_ControlRequest.wValue > DevDescriptorPtr->NumberOfConfigurations)
 186:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 187:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 188:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 189:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > DevDescriptorPtr->NumberOfConfigurations)
 190:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 191:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 192:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 193:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 194:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 195:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 196:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
 197:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 198:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 199:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 200:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_Device_ConfigurationNumber)
 201:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = DEVICE_STATE_Configured;
 202:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else
 203:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
 204:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 205:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ConfigurationChanged();
 206:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 207:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 208:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetConfiguration(void)
 209:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 210:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 211:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 212:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_8(USB_Device_ConfigurationNumber);
 213:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 214:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 215:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 216:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 217:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 218:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 219:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetInternalSerialDescriptor(void)
 220:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 221:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	struct
 222:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 223:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		USB_Descriptor_Header_t Header;
 224:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		uint16_t                UnicodeString[INTERNAL_SERIAL_LENGTH_BITS / 4];
 225:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	} SignatureDescriptor;
 226:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 227:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Type = DTYPE_String;
 228:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
 229:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 230:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_GetSerialString(SignatureDescriptor.UnicodeString);
 231:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 232:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 233:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 234:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
 235:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 236:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 237:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #endif
 238:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 239:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetDescriptor(void)
 240:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 241:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	const void* DescriptorPointer;
 242:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint16_t    DescriptorSize;
 243:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 244:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 245:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 246:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t DescriptorAddressSpace;
 247:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 248:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 249:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 250:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
 251:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 252:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		USB_Device_GetInternalSerialDescriptor();
 253:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 254:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 255:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 256:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 257:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIn
 258:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 &DescriptorPointer
 259:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 260:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 261:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 , &DescriptorAddressSpace
 262:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 263:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 													 )) == NO_DESCRIPTOR)
 264:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 265:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 266:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 267:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 268:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 269:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 270:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(USE_RAM_DESCRIPTORS) || !defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 271:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
 272:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#elif defined(USE_EEPROM_DESCRIPTORS)
 273:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
 274:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#elif defined(USE_FLASH_DESCRIPTORS)
 275:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 276:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 277:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (DescriptorAddressSpace == MEMSPACE_FLASH)
 278:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 279:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else if (DescriptorAddressSpace == MEMSPACE_EEPROM)
 280:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
 281:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else
 282:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
 283:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 284:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 285:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 286:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 287:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 288:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetStatus(void)
 289:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 290:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t CurrentStatus = 0;
 124               		.loc 1 290 0 is_stmt 1
 125 005e 8091 0000 		lds r24,USB_Device_CurrentlySelfPowered
 126               	.LVL6:
 291:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 292:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	switch (USB_ControlRequest.bmRequestType)
 293:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 294:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE):
 295:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		{
 296:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(NO_DEVICE_SELF_POWER)
 297:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if (USB_Device_CurrentlySelfPowered)
 298:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  CurrentStatus |= FEATURE_SELFPOWERED_ENABLED;
 299:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 300:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 301:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 302:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if (USB_Device_RemoteWakeupEnabled)
 127               		.loc 1 302 0
 128 0062 9091 0000 		lds r25,USB_Device_RemoteWakeupEnabled
 129 0066 9923      		tst r25
 130 0068 01F0      		breq .L13
 303:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  CurrentStatus |= FEATURE_REMOTE_WAKEUP_ENABLED;
 131               		.loc 1 303 0
 132 006a 8260      		ori r24,lo8(2)
 133               	.LVL7:
 134 006c 00C0      		rjmp .L13
 135               	.LVL8:
 136               	.L65:
 137               	.LBB180:
 304:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 305:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 306:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		}
 307:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT):
 308:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		{
 309:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(CONTROL_ONLY_DEVICE)
 310:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
 138               		.loc 1 310 0
 139 006e 8091 0000 		lds r24,USB_ControlRequest+4
 140               	.LVL9:
 141 0072 8F70      		andi r24,lo8(15)
 142               	.LVL10:
 311:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 312:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if (EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
 143               		.loc 1 312 0
 144 0074 8730      		cpi r24,lo8(7)
 145 0076 00F0      		brlo .+2
 146 0078 00C0      		rjmp .L3
 147               	.LVL11:
 148               	.LBB181:
 149               	.LBB182:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 150               		.loc 2 270 0
 151 007a 8093 E900 		sts 233,r24
 152               	.LVL12:
 153               	.LBE182:
 154               	.LBE181:
 155               	.LBB183:
 156               	.LBB184:
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 157               		.loc 2 513 0
 158 007e 8091 EB00 		lds r24,235
 159               	.LVL13:
 160 0082 85FB      		bst r24,5
 161 0084 8827      		clr r24
 162 0086 80F9      		bld r24,0
 163               	.LVL14:
 164               	.LBE184:
 165               	.LBE183:
 166               	.LBB185:
 167               	.LBB186:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 168               		.loc 2 270 0
 169 0088 1092 E900 		sts 233,__zero_reg__
 170               	.LVL15:
 171               	.L13:
 172               	.LBE186:
 173               	.LBE185:
 174               	.LBE180:
 175               	.LBB187:
 176               	.LBB188:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 177               		.loc 2 444 0
 178 008c 9091 E800 		lds r25,232
 179 0090 977F      		andi r25,lo8(-9)
 180 0092 9093 E800 		sts 232,r25
 181               	.LVL16:
 182               	.LBE188:
 183               	.LBE187:
 184               	.LBB189:
 185               	.LBB190:
 543:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 553:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 555:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 556:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 557:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Discards one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 558:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 559:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 560:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 561:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Discard_8(void) ATTR_ALWAYS_INLINE;
 562:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Discard_8(void)
 563:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 564:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Dummy;
 565:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 566:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Dummy = UEDATX;
 567:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 568:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				(void)Dummy;
 569:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 570:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 571:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads two bytes from the currently selected endpoint's bank in little endian format, for OUT
 572:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction endpoints.
 573:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 574:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 575:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 576:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next two bytes in the currently selected endpoint's FIFO buffer.
 577:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 578:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 579:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_LE(void)
 580:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 581:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				union
 582:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 583:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint16_t Value;
 584:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint8_t  Bytes[2];
 585:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				} Data;
 586:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 587:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[0] = UEDATX;
 588:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[1] = UEDATX;
 589:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 590:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Data.Value;
 591:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 593:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads two bytes from the currently selected endpoint's bank in big endian format, for OUT
 594:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction endpoints.
 595:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 596:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 597:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 598:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next two bytes in the currently selected endpoint's FIFO buffer.
 599:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 600:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 601:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_BE(void)
 602:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 603:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				union
 604:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 605:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint16_t Value;
 606:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint8_t  Bytes[2];
 607:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				} Data;
 608:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 609:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[1] = UEDATX;
 610:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[0] = UEDATX;
 611:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 612:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Data.Value;
 613:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 614:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 615:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes two bytes to the currently selected endpoint's bank in little endian format, for IN
 616:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction endpoints.
 617:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 618:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 619:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 620:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
 621:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 622:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_16_LE(const uint16_t Data) ATTR_ALWAYS_INLINE;
 623:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_16_LE(const uint16_t Data)
 624:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 625:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = (Data & 0xFF);
 186               		.loc 2 625 0
 187 0096 8093 F100 		sts 241,r24
 626:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = (Data >> 8);
 188               		.loc 2 626 0
 189 009a 1092 F100 		sts 241,__zero_reg__
 190 009e 00C0      		rjmp .L63
 191               	.LVL17:
 192               	.L6:
 193               	.LBE190:
 194               	.LBE189:
 195               	.LBE179:
 196               	.LBE178:
  82:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_ENDPOINT)))
 197               		.loc 1 82 0
 198 00a0 282F      		mov r18,r24
 199 00a2 2D7F      		andi r18,lo8(-3)
 200 00a4 01F0      		breq .+2
 201 00a6 00C0      		rjmp .L3
 202               	.LBB191:
 203               	.LBB192:
 313:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				return;
 314:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 315:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			Endpoint_SelectEndpoint(EndpointIndex);
 316:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 317:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			CurrentStatus = Endpoint_IsStalled();
 318:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 319:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 320:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 321:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 322:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 323:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		}
 324:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		default:
 325:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			return;
 326:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 327:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 328:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 329:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 330:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_16_LE(CurrentStatus);
 331:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 332:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 333:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 334:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 335:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 336:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_ClearSetFeature(void)
 337:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 338:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	switch (USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT)
 204               		.loc 1 338 0
 205 00a8 8823      		tst r24
 206 00aa 01F0      		breq .L14
 207 00ac 8230      		cpi r24,lo8(2)
 208 00ae 01F0      		breq .L15
 209 00b0 00C0      		rjmp .L3
 210               	.L14:
 339:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 340:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 341:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case REQREC_DEVICE:
 342:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		{
 343:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_DeviceRemoteWakeup)
 211               		.loc 1 343 0
 212 00b2 8091 0000 		lds r24,USB_ControlRequest+2
 213               	.LVL18:
 214 00b6 8130      		cpi r24,lo8(1)
 215 00b8 01F0      		breq .+2
 216 00ba 00C0      		rjmp .L3
 344:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  USB_Device_RemoteWakeupEnabled = (USB_ControlRequest.bRequest == REQ_SetFeature);
 217               		.loc 1 344 0
 218 00bc 9330      		cpi r25,lo8(3)
 219 00be 01F0      		breq .L16
 220 00c0 80E0      		ldi r24,0
 221               	.L16:
 222 00c2 8093 0000 		sts USB_Device_RemoteWakeupEnabled,r24
 223 00c6 00C0      		rjmp .L17
 224               	.LVL19:
 225               	.L15:
 345:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			else
 346:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  return;
 347:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 348:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 349:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		}
 350:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 351:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#if !defined(CONTROL_ONLY_DEVICE)
 352:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case REQREC_ENDPOINT:
 353:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		{
 354:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_EndpointHalt)
 226               		.loc 1 354 0
 227 00c8 8091 0000 		lds r24,USB_ControlRequest+2
 228               	.LVL20:
 229 00cc 8111      		cpse r24,__zero_reg__
 230 00ce 00C0      		rjmp .L17
 231               	.LBB193:
 355:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			{
 356:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
 232               		.loc 1 356 0
 233 00d0 8091 0000 		lds r24,USB_ControlRequest+4
 234 00d4 8F70      		andi r24,lo8(15)
 235               	.LVL21:
 357:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 358:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (EndpointIndex == ENDPOINT_CONTROLEP || EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
 236               		.loc 1 358 0
 237 00d6 2FEF      		ldi r18,lo8(-1)
 238 00d8 280F      		add r18,r24
 239 00da 2630      		cpi r18,lo8(6)
 240 00dc 00F0      		brlo .+2
 241 00de 00C0      		rjmp .L3
 242               	.LVL22:
 243               	.LBB194:
 244               	.LBB195:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 245               		.loc 2 270 0
 246 00e0 8093 E900 		sts 233,r24
 247               	.LVL23:
 248               	.LBE195:
 249               	.LBE194:
 250               	.LBB196:
 251               	.LBB197:
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 252               		.loc 2 313 0
 253 00e4 2091 EB00 		lds r18,235
 254               	.LBE197:
 255               	.LBE196:
 359:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  return;
 360:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 361:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				Endpoint_SelectEndpoint(EndpointIndex);
 362:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 363:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (Endpoint_IsEnabled())
 256               		.loc 1 363 0
 257 00e8 20FF      		sbrs r18,0
 258 00ea 00C0      		rjmp .L17
 364:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
 365:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					if (USB_ControlRequest.bRequest == REQ_SetFeature)
 259               		.loc 1 365 0
 260 00ec 9330      		cpi r25,lo8(3)
 261 00ee 01F4      		brne .L20
 262               	.LBB198:
 263               	.LBB199:
 491:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 264               		.loc 2 491 0
 265 00f0 8091 EB00 		lds r24,235
 266               	.LVL24:
 267 00f4 8062      		ori r24,lo8(32)
 268 00f6 00C0      		rjmp .L60
 269               	.LVL25:
 270               	.L20:
 271               	.LBE199:
 272               	.LBE198:
 273               	.LBB200:
 274               	.LBB201:
 501:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 275               		.loc 2 501 0
 276 00f8 9091 EB00 		lds r25,235
 277 00fc 9061      		ori r25,lo8(16)
 278 00fe 9093 EB00 		sts 235,r25
 279               	.LVL26:
 280               	.LBE201:
 281               	.LBE200:
 282               	.LBB202:
 283               	.LBB203:
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284               		.loc 2 282 0
 285 0102 21E0      		ldi r18,lo8(1)
 286 0104 30E0      		ldi r19,0
 287 0106 A901      		movw r20,r18
 288 0108 00C0      		rjmp 2f
 289               		1:
 290 010a 440F      		lsl r20
 291 010c 551F      		rol r21
 292               		2:
 293 010e 8A95      		dec r24
 294 0110 02F4      		brpl 1b
 295 0112 4093 EA00 		sts 234,r20
 283:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296               		.loc 2 283 0
 297 0116 1092 EA00 		sts 234,__zero_reg__
 298               	.LBE203:
 299               	.LBE202:
 300               	.LBB204:
 301               	.LBB205:
 520:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 302               		.loc 2 520 0
 303 011a 8091 EB00 		lds r24,235
 304               	.LVL27:
 305 011e 8860      		ori r24,lo8(8)
 306               	.LVL28:
 307               	.L60:
 308 0120 8093 EB00 		sts 235,r24
 309               	.LVL29:
 310               	.L17:
 311               	.LBE205:
 312               	.LBE204:
 313               	.LBE193:
 314               	.LBB206:
 315               	.LBB207:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 316               		.loc 2 270 0
 317 0124 1092 E900 		sts 233,__zero_reg__
 318               	.LBE207:
 319               	.LBE206:
 320               	.LBB208:
 321               	.LBB209:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 322               		.loc 2 444 0
 323 0128 8091 E800 		lds r24,232
 324 012c 877F      		andi r24,lo8(-9)
 325               	.LVL30:
 326               	.L61:
 327 012e 8093 E800 		sts 232,r24
 328               	.LBE209:
 329               	.LBE208:
 366:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					{
 367:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_StallTransaction();
 368:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					}
 369:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					else
 370:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					{
 371:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_ClearStall();
 372:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_ResetEndpoint(EndpointIndex);
 373:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_ResetDataToggle();
 374:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					}
 375:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
 376:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			}
 377:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 378:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 379:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		}
 380:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 381:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		default:
 382:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			return;
 383:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 384:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 385:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 386:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 387:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 388:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 389:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 330               		.loc 1 389 0
 331 0132 0E94 0000 		call Endpoint_ClearStatusStage
 332               	.LVL31:
 333 0136 00C0      		rjmp .L3
 334               	.LVL32:
 335               	.L7:
 336               	.LBE192:
 337               	.LBE191:
  90:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetAddress();
 338               		.loc 1 90 0
 339 0138 8111      		cpse r24,__zero_reg__
 340 013a 00C0      		rjmp .L3
 341               	.LBB210:
 342               	.LBB211:
 127:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 343               		.loc 1 127 0
 344 013c 1091 0000 		lds r17,USB_ControlRequest+2
 345 0140 1F77      		andi r17,lo8(127)
 346               	.LVL33:
 347               	.LBB212:
 348               	.LBB213:
 349               		.file 3 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#ifndef USE_INTERNAL_SERIAL
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					#define USE_INTERNAL_SERIAL         0xDC
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#endif
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS     80
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS   0x0E
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#undef	USE_INTERNAL_SERIAL
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL             NO_DESCRIPTOR
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS     0
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS   0
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				}
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Disables the device mode Start Of Frame events. When disabled, this stops the firing of the
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event when enumerated in device mode.
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void) ATTR_ALWAYS_INLINE;
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void)
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Disable(USB_INT_SOFI);
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				}
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Private Interface - For use in library only: */
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	#if !defined(__DOXYGEN__)
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_DEVICE_OPT_LOWSPEED)
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void) ATTR_ALWAYS_INLINE;
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void)
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDCON |=  (1 << LSM);
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void)
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDCON &= ~(1 << LSM);
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
 350               		.loc 3 216 0
 351 0142 8091 E300 		lds r24,227
 352               	.LVL34:
 353 0146 8078      		andi r24,lo8(-128)
 354 0148 812B      		or r24,r17
 355 014a 8093 E300 		sts 227,r24
 356               	.LVL35:
 357               	.LBE213:
 358               	.LBE212:
 359               	.LBB214:
 360               	.LBB215:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 361               		.loc 2 444 0
 362 014e 8091 E800 		lds r24,232
 363 0152 877F      		andi r24,lo8(-9)
 364 0154 8093 E800 		sts 232,r24
 365               	.LBE215:
 366               	.LBE214:
 133:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 367               		.loc 1 133 0
 368 0158 0E94 0000 		call Endpoint_ClearStatusStage
 369               	.LVL36:
 370               	.L21:
 371               	.LBB216:
 372               	.LBB217:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 373               		.loc 2 407 0
 374 015c 8091 E800 		lds r24,232
 375               	.LBE217:
 376               	.LBE216:
 135:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 377               		.loc 1 135 0
 378 0160 80FF      		sbrs r24,0
 379 0162 00C0      		rjmp .L21
 380               	.LVL37:
 381               	.LBB218:
 382               	.LBB219:
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				(void)Address;
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDADDR |= (1 << ADDEN);
 383               		.loc 3 224 0
 384 0164 8091 E300 		lds r24,227
 385 0168 8068      		ori r24,lo8(-128)
 386 016a 8093 E300 		sts 227,r24
 387               	.LBE219:
 388               	.LBE218:
 139:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 389               		.loc 1 139 0
 390 016e 1111      		cpse r17,__zero_reg__
 391 0170 00C0      		rjmp .L33
 392 0172 82E0      		ldi r24,lo8(2)
 393 0174 00C0      		rjmp .L22
 394               	.L33:
 395 0176 83E0      		ldi r24,lo8(3)
 396               	.L22:
 397 0178 8093 0000 		sts USB_DeviceState,r24
 398 017c 00C0      		rjmp .L3
 399               	.LVL38:
 400               	.L8:
 401               	.LBE211:
 402               	.LBE210:
  95:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_INTERFACE)))
 403               		.loc 1 95 0
 404 017e 8058      		subi r24,lo8(-(-128))
 405               	.LVL39:
 406 0180 8230      		cpi r24,lo8(2)
 407 0182 00F0      		brlo .+2
 408 0184 00C0      		rjmp .L3
 409               	.LBB220:
 410               	.LBB221:
 250:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 411               		.loc 1 250 0
 412 0186 8091 0000 		lds r24,USB_ControlRequest+2
 413 018a 9091 0000 		lds r25,USB_ControlRequest+2+1
 414 018e 8C3D      		cpi r24,-36
 415 0190 53E0      		ldi r21,3
 416 0192 9507      		cpc r25,r21
 417 0194 01F4      		brne .L23
 418               	.LBB222:
 419               	.LBB223:
 227:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
 420               		.loc 1 227 0
 421 0196 83E0      		ldi r24,lo8(3)
 422 0198 8A83      		std Y+2,r24
 228:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 423               		.loc 1 228 0
 424 019a 8AE2      		ldi r24,lo8(42)
 425 019c 8983      		std Y+1,r24
 426               	.LVL40:
 427               	.LBB224:
 428               	.LBB225:
 429               	.LBB226:
 430               	.LBB227:
 431               		.file 4 "lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \dir
  32:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library header files.
  33:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  34:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  This folder contains header files which are common to all parts of the LUFA library. They may b
  35:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  user applications.
  36:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  37:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  38:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \file
  39:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  40:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  41:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \copydetails Group_Common
  42:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  43:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  44:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \defgroup Group_Common Common Utility Headers - LUFA/Drivers/Common/Common.h
  45:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  46:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  47:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  Common utility headers containing macros, functions, enums and types which are common to all
  48:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  aspects of the library.
  49:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  50:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  @{
  51:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  52:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  53:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \defgroup Group_GlobalInt Global Interrupt Macros
  54:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Convenience macros for the management of interrupts globally within the device.
  55:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  56:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  Macros and functions to create and control global interrupts within the device.
  57:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  58:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  59:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** #ifndef __LUFA_COMMON_H__
  60:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** #define __LUFA_COMMON_H__
  61:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  62:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Macros: */
  63:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#define __INCLUDE_FROM_COMMON_H
  64:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  65:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Includes: */
  66:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <stdint.h>
  67:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <stdbool.h>
  68:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <string.h>
  69:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <stddef.h>
  70:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  71:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "Architectures.h"
  72:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "BoardTypes.h"
  73:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "ArchitectureSpecific.h"
  74:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "CompilerSpecific.h"
  75:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "Attributes.h"
  76:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  77:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(USE_LUFA_CONFIG_HEADER)
  78:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "LUFAConfig.h"
  79:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#endif
  80:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  81:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Enable C linkage for C++ Compilers: */
  82:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(__cplusplus)
  83:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			extern "C" {
  84:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#endif
  85:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  86:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Architecture specific utility includes: */
  87:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(__DOXYGEN__)
  88:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Type define for an unsigned integer the same width as the selected architecture's machine re
  89:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  This is distinct from the non-specific standard int data type, whose width is machine depend
  90:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  which may not reflect the actual machine register width on some targets (e.g. AVR8).
  91:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
  92:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef MACHINE_REG_t uint_reg_t;
  93:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_AVR8)
  94:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/io.h>
  95:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/interrupt.h>
  96:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/pgmspace.h>
  97:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/eeprom.h>
  98:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/boot.h>
  99:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 100:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <util/delay.h>
 101:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 102:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 103:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 104:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 105:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 106:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 107:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 108:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 109:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 110:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_UC3)
 111:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr32/io.h>
 112:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 113:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 114:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			// === TODO: Find abstracted way to handle these ===
 115:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define PROGMEM
 116:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define pgm_read_byte(x)         *x
 117:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define memcmp_P(...)            memcmp(__VA_ARGS__)
 118:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define memcpy_P(...)            memcpy(__VA_ARGS__)
 119:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define strlen_P(...)            strlen(__VA_ARGS__)
 120:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			// =================================================
 121:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 122:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint32_t uint_reg_t;
 123:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 124:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_BIG_ENDIAN
 125:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 126:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 127:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_XMEGA)
 128:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/io.h>
 129:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/interrupt.h>
 130:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/pgmspace.h>
 131:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/eeprom.h>
 132:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 133:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <util/delay.h>
 134:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 135:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 136:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 137:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 138:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 139:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 140:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 141:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 142:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 143:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#else
 144:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#error Unknown device architecture specified.
 145:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#endif
 146:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 147:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Public Interface - May be used in end-application: */
 148:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		/* Macros: */
 149:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(__DOXYGEN__)
 150:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				// Obsolete, retained for compatibility with user code
 151:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MACROS                  do
 152:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MACROE                  while (0)
 153:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 154:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 155:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Convenience macro to determine the larger of two values.
 156:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 157:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 158:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *             multiple times.
 159:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 160:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 161:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 162:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 163:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return The larger of the two input parameters
 164:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 165:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(MAX) || defined(__DOXYGEN__)
 166:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MAX(x, y)               (((x) > (y)) ? (x) : (y))
 167:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 168:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 169:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Convenience macro to determine the smaller of two values.
 170:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 171:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 172:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *             multiple times.
 173:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 174:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] x  First value to compare.
 175:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] y  First value to compare.
 176:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 177:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return The smaller of the two input parameters
 178:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 179:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(MIN) || defined(__DOXYGEN__)
 180:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MIN(x, y)               (((x) < (y)) ? (x) : (y))
 181:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 182:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 183:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(STRINGIFY) || defined(__DOXYGEN__)
 184:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Converts the given input into a string, via the C Preprocessor. This macro puts literal quo
 185:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  marks around the input, converting the source into a string literal.
 186:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 187:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  Input to convert into a string literal.
 188:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 189:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return String version of the input.
 190:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 191:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define STRINGIFY(x)            #x
 192:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 193:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Converts the given input into a string after macro expansion, via the C Preprocessor. This 
 194:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  literal quotation marks around the expanded input, converting the source into a string lite
 195:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 196:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  Input to expand and convert into a string literal.
 197:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 198:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return String version of the expanded input.
 199:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 200:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define STRINGIFY_EXPANDED(x)   STRINGIFY(x)
 201:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 202:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 203:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(CONCAT) || defined(__DOXYGEN__)
 204:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Concatenates the given input into a single token, via the C Preprocessor.
 205:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 206:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  First item to concatenate.
 207:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] y  Second item to concatenate.
 208:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 209:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return Concatenated version of the input.
 210:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 211:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define CONCAT(x, y)            x ## y
 212:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 213:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** CConcatenates the given input into a single token after macro expansion, via the C Preproce
 214:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 215:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  First item to concatenate.
 216:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] y  Second item to concatenate.
 217:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 218:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return Concatenated version of the expanded input.
 219:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 220:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define CONCAT_EXPANDED(x, y)   CONCAT(x, y)
 221:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 222:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 223:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(ISR) || defined(__DOXYGEN__)
 224:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Macro for the definition of interrupt service routines, so that the compiler can insert the
 225:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  prologue and epilogue code to properly manage the interrupt routine without affecting the m
 226:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  state with unintentional side-effects.
 227:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 228:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  Interrupt handlers written using this macro may still need to be registered with the microc
 229:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  Interrupt Controller (if present) before they will properly handle incoming interrupt event
 230:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 231:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \note This macro is only supplied on some architectures, where the standard library does no
 232:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *        definition. If an existing definition exists, the alternative definition here will be
 233:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 234:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \ingroup Group_GlobalInt
 235:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 236:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] Name  Unique name of the interrupt service routine.
 237:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 238:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define ISR(Name, ...)          void Name (void) __attribute__((__interrupt__)) __VA_ARGS__; vo
 239:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 240:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 241:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		/* Inline Functions: */
 242:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Function to reverse the individual bits in a byte - i.e. bit 7 is moved to bit 0, bit 6 to b
 243:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  etc.
 244:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 245:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] Byte  Byte of data whose bits are to be reversed.
 246:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return Input data with the individual bits reversed (mirrored).
 248:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 249:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte) ATTR_WARN_UNUSED_RESULT ATTR_CONST;
 250:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte)
 251:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 252:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xF0) >> 4) | ((Byte & 0x0F) << 4));
 253:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xCC) >> 2) | ((Byte & 0x33) << 2));
 254:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xAA) >> 1) | ((Byte & 0x55) << 1));
 255:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 256:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return Byte;
 257:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 258:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 259:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Function to perform a blocking delay for a specified number of milliseconds. The actual dela
 260:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  at a minimum the specified number of milliseconds, however due to loop overhead and internal
 261:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  may be slightly higher.
 262:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 263:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] Milliseconds  Number of milliseconds to delay
 264:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 265:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds) ATTR_ALWAYS_INLINE;
 266:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds)
 267:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 268:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 269:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 270:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 271:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					_delay_ms(Milliseconds);
 272:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 273:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				else
 274:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 275:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					while (Milliseconds--)
 276:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					  _delay_ms(1);
 277:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 278:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 279:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				while (Milliseconds--)
 280:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 281:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					__builtin_mtsr(AVR32_COUNT, 0);
 282:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					while ((uint32_t)__builtin_mfsr(AVR32_COUNT) < (F_CPU / 1000));
 283:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 284:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 285:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 286:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 287:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					_delay_ms(Milliseconds);
 288:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 289:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				else
 290:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 291:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					while (Milliseconds--)
 292:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					  _delay_ms(1);
 293:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 294:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 295:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 296:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 297:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Retrieves a mask which contains the current state of the global interrupts for the device. T
 298:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  value can be stored before altering the global interrupt enable state, before restoring the
 299:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  flag(s) back to their previous values after a critical section using \ref SetGlobalInterrupt
 300:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 301:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 302:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 303:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return  Mask containing the current Global Interrupt Enable Mask bit(s).
 304:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 305:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 306:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void)
 307:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 308:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 432               		.loc 4 308 0
 309:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 310:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 311:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 433               		.loc 4 311 0
 434 019e 4FB7      		in r20,__SREG__
 435               	.LBE227:
 436               	.LBE226:
 437               	.LBB228:
 438               	.LBB229:
 312:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 313:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return __builtin_mfsr(AVR32_SR);
 314:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 315:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 316:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 317:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 318:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 319:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Sets the global interrupt enable state of the microcontroller to the mask passed into the fu
 320:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  This can be combined with \ref GetGlobalInterruptMask() to save and restore the Global Inter
 321:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  Mask bit(s) of the device after a critical section has completed.
 322:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 323:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 324:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 325:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] GlobalIntState  Global Interrupt Enable Mask value to use
 326:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 327:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState) ATTR_ALWAYS_INLINE;
 328:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
 329:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 330:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 331:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 332:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 333:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 334:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 335:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				if (GlobalIntState & AVR32_SR_GM)
 336:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				  __builtin_ssrf(AVR32_SR_GM_OFFSET);
 337:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				else
 338:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				  __builtin_csrf(AVR32_SR_GM_OFFSET);
 339:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 340:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 341:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 342:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 343:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 344:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 345:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 346:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Enables global interrupt handling for the device, allowing interrupts to be handled.
 347:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 348:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 349:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 350:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void) ATTR_ALWAYS_INLINE;
 351:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void)
 352:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 353:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 354:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 355:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 356:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				sei();
 357:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 358:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				__builtin_csrf(AVR32_SR_GM_OFFSET);
 359:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 360:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				sei();
 361:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 362:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 363:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 364:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 365:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 366:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Disabled global interrupt handling for the device, preventing interrupts from being handled.
 367:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 368:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 369:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 370:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void) ATTR_ALWAYS_INLINE;
 371:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void)
 372:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 373:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 439               		.loc 4 373 0
 374:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 375:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 376:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 440               		.loc 4 376 0
 441               	/* #APP */
 442               	 ;  376 "lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h" 1
 443 01a0 F894      		cli
 444               	 ;  0 "" 2
 377:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 378:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				__builtin_ssrf(AVR32_SR_GM_OFFSET);
 379:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 380:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 381:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 382:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 383:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 445               		.loc 4 383 0
 446               	.LVL41:
 447               	/* #NOAPP */
 448 01a2 DE01      		movw r26,r28
 449 01a4 1396      		adiw r26,3
 450               	.LBE229:
 451               	.LBE228:
 452               	.LBB230:
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void)
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return (UDADDR & (1 << ADDEN));
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString) ATTR_NON_NULL_PTR_A
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString)
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				GlobalInterruptDisable();
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNu
 453               		.loc 3 242 0
 454 01a6 20E0      		ldi r18,0
 455               	.LBE230:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 456               		.loc 3 240 0
 457 01a8 3EE0      		ldi r19,lo8(14)
 458               	.LBB233:
 459               	.LBB231:
 460               	.LBB232:
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					uint8_t SerialByte = boot_signature_byte_get(SigReadAddress);
 461               		.loc 3 244 0
 462 01aa 51E2      		ldi r21,lo8(33)
 463               	.LVL42:
 464               	.L27:
 465 01ac E32F      		mov r30,r19
 466 01ae F0E0      		ldi r31,0
 467               	/* #APP */
 468               	 ;  244 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h" 1
 469 01b0 5093 5700 		sts 87, r21
 470 01b4 E491      		lpm r30, Z
 471               		
 472               	 ;  0 "" 2
 473               	.LVL43:
 474               	/* #NOAPP */
 475               	.LBE232:
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					if (SerialCharNum & 0x01)
 476               		.loc 3 246 0
 477 01b6 20FF      		sbrs r18,0
 478 01b8 00C0      		rjmp .L24
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					{
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 						SerialByte >>= 4;
 479               		.loc 3 248 0
 480 01ba E295      		swap r30
 481               	.LVL44:
 482 01bc EF70      		andi r30,lo8(15)
 483               	.LVL45:
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 						SigReadAddress++;
 484               		.loc 3 249 0
 485 01be 3F5F      		subi r19,lo8(-(1))
 486               	.LVL46:
 487               	.L24:
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					}
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					SerialByte &= 0x0F;
 488               		.loc 3 252 0
 489 01c0 EF70      		andi r30,lo8(15)
 490               	.LVL47:
 491 01c2 8E2F      		mov r24,r30
 492 01c4 90E0      		ldi r25,0
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					UnicodeString[SerialCharNum] = cpu_to_le16((SerialByte >= 10) ?
 493               		.loc 3 254 0
 494 01c6 EA30      		cpi r30,lo8(10)
 495 01c8 00F0      		brlo .L25
 496 01ca C796      		adiw r24,55
 497 01cc 00C0      		rjmp .L26
 498               	.LVL48:
 499               	.L25:
 500 01ce C096      		adiw r24,48
 501               	.LVL49:
 502               	.L26:
 503 01d0 8D93      		st X+,r24
 504 01d2 9D93      		st X+,r25
 505               	.LBE231:
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 506               		.loc 3 242 0
 507 01d4 2F5F      		subi r18,lo8(-(1))
 508               	.LVL50:
 509 01d6 2431      		cpi r18,lo8(20)
 510 01d8 01F4      		brne .L27
 511               	.LVL51:
 512               	.LBE233:
 513               	.LBB234:
 514               	.LBB235:
 330:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 515               		.loc 4 330 0
 333:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 516               		.loc 4 333 0
 517 01da 4FBF      		out __SREG__,r20
 518               	.LVL52:
 343:lib/lufa/LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 519               		.loc 4 343 0
 520               	.LBE235:
 521               	.LBE234:
 522               	.LBE225:
 523               	.LBE224:
 524               	.LBB236:
 525               	.LBB237:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 526               		.loc 2 444 0
 527 01dc 8091 E800 		lds r24,232
 528 01e0 877F      		andi r24,lo8(-9)
 529 01e2 8093 E800 		sts 232,r24
 530               	.LBE237:
 531               	.LBE236:
 234:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 532               		.loc 1 234 0
 533 01e6 6AE2      		ldi r22,lo8(42)
 534 01e8 70E0      		ldi r23,0
 535 01ea CE01      		movw r24,r28
 536 01ec 0196      		adiw r24,1
 537 01ee 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 538               	.LVL53:
 539 01f2 00C0      		rjmp .L62
 540               	.LVL54:
 541               	.L23:
 542               	.LBE223:
 543               	.LBE222:
 257:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 &DescriptorPointer
 544               		.loc 1 257 0
 545 01f4 6091 0000 		lds r22,USB_ControlRequest+4
 546 01f8 7091 0000 		lds r23,USB_ControlRequest+4+1
 547 01fc AE01      		movw r20,r28
 548 01fe 4F5F      		subi r20,-1
 549 0200 5F4F      		sbci r21,-1
 550 0202 0E94 0000 		call CALLBACK_USB_GetDescriptor
 551               	.LVL55:
 552 0206 BC01      		movw r22,r24
 553               	.LVL56:
 554 0208 892B      		or r24,r25
 555 020a 01F0      		breq .L3
 556               	.LBB238:
 557               	.LBB239:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 558               		.loc 2 444 0
 559 020c 9091 E800 		lds r25,232
 560 0210 977F      		andi r25,lo8(-9)
 561 0212 9093 E800 		sts 232,r25
 562               	.LBE239:
 563               	.LBE238:
 275:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 564               		.loc 1 275 0
 565 0216 8981      		ldd r24,Y+1
 566 0218 9A81      		ldd r25,Y+2
 567 021a 0E94 0000 		call Endpoint_Write_Control_PStream_LE
 568               	.LVL57:
 569               	.L62:
 570               	.LBB240:
 571               	.LBB241:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 572               		.loc 2 471 0
 573 021e 8091 E800 		lds r24,232
 574 0222 8B77      		andi r24,lo8(123)
 575 0224 8093 E800 		sts 232,r24
 576 0228 00C0      		rjmp .L3
 577               	.LVL58:
 578               	.L9:
 579               	.LBE241:
 580               	.LBE240:
 581               	.LBE221:
 582               	.LBE220:
 103:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_GetConfiguration();
 583               		.loc 1 103 0
 584 022a 8038      		cpi r24,lo8(-128)
 585 022c 01F4      		brne .L3
 586               	.LBB242:
 587               	.LBB243:
 588               	.LBB244:
 589               	.LBB245:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 590               		.loc 2 444 0
 591 022e 8091 E800 		lds r24,232
 592               	.LVL59:
 593 0232 877F      		andi r24,lo8(-9)
 594 0234 8093 E800 		sts 232,r24
 595               	.LVL60:
 596               	.LBE245:
 597               	.LBE244:
 212:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 598               		.loc 1 212 0
 599 0238 8091 0000 		lds r24,USB_Device_ConfigurationNumber
 600               	.LVL61:
 601               	.LBB246:
 602               	.LBB247:
 554:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 603               		.loc 2 554 0
 604 023c 8093 F100 		sts 241,r24
 605               	.LVL62:
 606               	.L63:
 607               	.LBE247:
 608               	.LBE246:
 609               	.LBB248:
 610               	.LBB249:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 611               		.loc 2 456 0
 612 0240 8091 E800 		lds r24,232
 613 0244 8E77      		andi r24,lo8(126)
 614 0246 00C0      		rjmp .L61
 615               	.LVL63:
 616               	.L10:
 617               	.LBE249:
 618               	.LBE248:
 619               	.LBE243:
 620               	.LBE242:
 108:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetConfiguration();
 621               		.loc 1 108 0
 622 0248 8111      		cpse r24,__zero_reg__
 623 024a 00C0      		rjmp .L3
 624               	.LBB250:
 625               	.LBB251:
 145:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 626               		.loc 1 145 0
 627 024c 9091 0000 		lds r25,USB_ControlRequest+2
 628 0250 9230      		cpi r25,lo8(2)
 629 0252 00F4      		brsh .L3
 630               	.LBB252:
 631               	.LBB253:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 632               		.loc 2 444 0
 633 0254 8091 E800 		lds r24,232
 634               	.LVL64:
 635 0258 877F      		andi r24,lo8(-9)
 636 025a 8093 E800 		sts 232,r24
 637               	.LVL65:
 638               	.LBE253:
 639               	.LBE252:
 196:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 640               		.loc 1 196 0
 641 025e 9093 0000 		sts USB_Device_ConfigurationNumber,r25
 198:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 642               		.loc 1 198 0
 643 0262 0E94 0000 		call Endpoint_ClearStatusStage
 644               	.LVL66:
 200:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = DEVICE_STATE_Configured;
 645               		.loc 1 200 0
 646 0266 8091 0000 		lds r24,USB_Device_ConfigurationNumber
 647 026a 8111      		cpse r24,__zero_reg__
 648 026c 00C0      		rjmp .L34
 649               	.LBB254:
 650               	.LBB255:
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 651               		.loc 3 230 0
 652 026e 8091 E300 		lds r24,227
 653               	.LBE255:
 654               	.LBE254:
 203:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 655               		.loc 1 203 0
 656 0272 87FD      		sbrc r24,7
 657 0274 00C0      		rjmp .L34
 658 0276 81E0      		ldi r24,lo8(1)
 659 0278 00C0      		rjmp .L31
 660               	.L34:
 661 027a 84E0      		ldi r24,lo8(4)
 662               	.L31:
 663 027c 8093 0000 		sts USB_DeviceState,r24
 205:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 664               		.loc 1 205 0
 665 0280 0E94 0000 		call EVENT_USB_Device_ConfigurationChanged
 666               	.LVL67:
 667               	.L3:
 668               	.LBE251:
 669               	.LBE250:
 670               	.LBE177:
 671               	.LBB256:
 672               	.LBB257:
 431:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 673               		.loc 2 431 0
 674 0284 8091 E800 		lds r24,232
 675               	.LBE257:
 676               	.LBE256:
 118:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 677               		.loc 1 118 0
 678 0288 83FF      		sbrs r24,3
 679 028a 00C0      		rjmp .L1
 680               	.LBB258:
 681               	.LBB259:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 682               		.loc 2 444 0
 683 028c 8091 E800 		lds r24,232
 684 0290 877F      		andi r24,lo8(-9)
 685 0292 8093 E800 		sts 232,r24
 686               	.LBE259:
 687               	.LBE258:
 688               	.LBB260:
 689               	.LBB261:
 491:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 690               		.loc 2 491 0
 691 0296 8091 EB00 		lds r24,235
 692 029a 8062      		ori r24,lo8(32)
 693 029c 8093 EB00 		sts 235,r24
 694               	.L1:
 695               	/* epilogue start */
 696               	.LBE261:
 697               	.LBE260:
 123:lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 698               		.loc 1 123 0
 699 02a0 AA96      		adiw r28,42
 700 02a2 0FB6      		in __tmp_reg__,__SREG__
 701 02a4 F894      		cli
 702 02a6 DEBF      		out __SP_H__,r29
 703 02a8 0FBE      		out __SREG__,__tmp_reg__
 704 02aa CDBF      		out __SP_L__,r28
 705 02ac DF91      		pop r29
 706 02ae CF91      		pop r28
 707 02b0 1F91      		pop r17
 708 02b2 0895      		ret
 709               		.cfi_endproc
 710               	.LFE85:
 712               		.comm	USB_Device_RemoteWakeupEnabled,1,1
 713               		.comm	USB_Device_CurrentlySelfPowered,1,1
 714               		.comm	USB_Device_ConfigurationNumber,1,1
 715               		.text
 716               	.Letext0:
 717               		.file 5 "/usr/lib/avr/include/stdint.h"
 718               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/StdDescriptors.h"
 719               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/StdRequestType.h"
 720               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 721               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 722               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
 723               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/Events.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 DeviceStandardReq.c
     /tmp/ccn8iRdV.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccn8iRdV.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccn8iRdV.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccn8iRdV.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccn8iRdV.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccn8iRdV.s:13     .text.USB_Device_ProcessControlRequest:0000000000000000 USB_Device_ProcessControlRequest
                            *COM*:0000000000000001 USB_Device_CurrentlySelfPowered
                            *COM*:0000000000000001 USB_Device_RemoteWakeupEnabled
                            *COM*:0000000000000001 USB_Device_ConfigurationNumber

UNDEFINED SYMBOLS
USB_ControlRequest
EVENT_USB_Device_ControlRequest
__tablejump2__
Endpoint_ClearStatusStage
USB_DeviceState
Endpoint_Write_Control_Stream_LE
CALLBACK_USB_GetDescriptor
Endpoint_Write_Control_PStream_LE
EVENT_USB_Device_ConfigurationChanged
__do_clear_bss
