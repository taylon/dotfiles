   1               		.file	"multi.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_init_kb,"ax",@progbits
  11               	.global	matrix_init_kb
  13               	matrix_init_kb:
  14               	.LFB19:
  15               		.file 1 "keyboards/doro67/multi/multi.c"
   1:keyboards/doro67/multi/multi.c **** /* Copyright 2019 ShadeDream
   2:keyboards/doro67/multi/multi.c ****  *
   3:keyboards/doro67/multi/multi.c ****  * This program is free software: you can redistribute it and/or modify
   4:keyboards/doro67/multi/multi.c ****  * it under the terms of the GNU General Public License as published by
   5:keyboards/doro67/multi/multi.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:keyboards/doro67/multi/multi.c ****  * (at your option) any later version.
   7:keyboards/doro67/multi/multi.c ****  *
   8:keyboards/doro67/multi/multi.c ****  * This program is distributed in the hope that it will be useful,
   9:keyboards/doro67/multi/multi.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:keyboards/doro67/multi/multi.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:keyboards/doro67/multi/multi.c ****  * GNU General Public License for more details.
  12:keyboards/doro67/multi/multi.c ****  *
  13:keyboards/doro67/multi/multi.c ****  * You should have received a copy of the GNU General Public License
  14:keyboards/doro67/multi/multi.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:keyboards/doro67/multi/multi.c ****  */
  16:keyboards/doro67/multi/multi.c **** #include "multi.h"
  17:keyboards/doro67/multi/multi.c **** 
  18:keyboards/doro67/multi/multi.c **** void matrix_init_kb(void) {
  16               		.loc 1 18 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  19:keyboards/doro67/multi/multi.c **** 	// put your keyboard start-up code here
  20:keyboards/doro67/multi/multi.c **** 	// runs once when the firmware starts up
  21:keyboards/doro67/multi/multi.c **** 
  22:keyboards/doro67/multi/multi.c ****     setPinOutput(E6);
  22               		.loc 1 22 0
  23 0000 6E9A      		sbi 0xd,6
  23:keyboards/doro67/multi/multi.c **** 	matrix_init_user();
  24               		.loc 1 23 0
  25 0002 0C94 0000 		jmp matrix_init_user
  26               	.LVL0:
  27               		.cfi_endproc
  28               	.LFE19:
  30               		.section	.text.matrix_scan_kb,"ax",@progbits
  31               	.global	matrix_scan_kb
  33               	matrix_scan_kb:
  34               	.LFB20:
  24:keyboards/doro67/multi/multi.c **** }
  25:keyboards/doro67/multi/multi.c **** 
  26:keyboards/doro67/multi/multi.c **** void matrix_scan_kb(void) {
  35               		.loc 1 26 0
  36               		.cfi_startproc
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
  27:keyboards/doro67/multi/multi.c **** 	// put your looping keyboard code here
  28:keyboards/doro67/multi/multi.c **** 	// runs every cycle (a lot)
  29:keyboards/doro67/multi/multi.c **** 
  30:keyboards/doro67/multi/multi.c **** 	matrix_scan_user();
  41               		.loc 1 30 0
  42 0000 0C94 0000 		jmp matrix_scan_user
  43               	.LVL1:
  44               		.cfi_endproc
  45               	.LFE20:
  47               		.section	.text.process_record_kb,"ax",@progbits
  48               	.global	process_record_kb
  50               	process_record_kb:
  51               	.LFB21:
  31:keyboards/doro67/multi/multi.c **** }
  32:keyboards/doro67/multi/multi.c **** 
  33:keyboards/doro67/multi/multi.c **** bool process_record_kb(uint16_t keycode, keyrecord_t *record) {
  52               		.loc 1 33 0
  53               		.cfi_startproc
  54               	.LVL2:
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  34:keyboards/doro67/multi/multi.c **** 	// put your per-action keyboard code here
  35:keyboards/doro67/multi/multi.c **** 	// runs for every action, just before processing by the firmware
  36:keyboards/doro67/multi/multi.c **** 
  37:keyboards/doro67/multi/multi.c **** 	return process_record_user(keycode, record);
  59               		.loc 1 37 0
  60 0000 0C94 0000 		jmp process_record_user
  61               	.LVL3:
  62               		.cfi_endproc
  63               	.LFE21:
  65               		.section	.text.led_set_kb,"ax",@progbits
  66               	.global	led_set_kb
  68               	led_set_kb:
  69               	.LFB22:
  38:keyboards/doro67/multi/multi.c **** }
  39:keyboards/doro67/multi/multi.c **** 
  40:keyboards/doro67/multi/multi.c **** void led_set_kb(uint8_t usb_led) {
  70               		.loc 1 40 0
  71               		.cfi_startproc
  72               	.LVL4:
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 0 */
  76               	.L__stack_usage = 0
  41:keyboards/doro67/multi/multi.c **** 	// put your keyboard LED indicator (ex: Caps Lock LED) toggling code here
  42:keyboards/doro67/multi/multi.c **** 
  43:keyboards/doro67/multi/multi.c **** 	if (IS_LED_ON(usb_led, USB_LED_CAPS_LOCK)) {
  77               		.loc 1 43 0
  78 0000 81FF      		sbrs r24,1
  79 0002 00C0      		rjmp .L5
  44:keyboards/doro67/multi/multi.c **** 		writePinLow(E6);
  80               		.loc 1 44 0
  81 0004 7698      		cbi 0xe,6
  82 0006 00C0      		rjmp .L6
  83               	.L5:
  45:keyboards/doro67/multi/multi.c **** 	} else {
  46:keyboards/doro67/multi/multi.c **** 		writePinHigh(E6);
  84               		.loc 1 46 0
  85 0008 769A      		sbi 0xe,6
  86               	.L6:
  47:keyboards/doro67/multi/multi.c **** 	}
  48:keyboards/doro67/multi/multi.c **** 
  49:keyboards/doro67/multi/multi.c **** 	led_set_user(usb_led);
  87               		.loc 1 49 0
  88 000a 0C94 0000 		jmp led_set_user
  89               	.LVL5:
  90               		.cfi_endproc
  91               	.LFE22:
  93               		.text
  94               	.Letext0:
  95               		.file 2 "/usr/lib/avr/include/stdint.h"
  96               		.file 3 "tmk_core/common/keyboard.h"
  97               		.file 4 "tmk_core/common/action.h"
  98               		.file 5 "tmk_core/common/report.h"
  99               		.file 6 "quantum/quantum.h"
 100               		.file 7 "tmk_core/common/action_util.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 multi.c
     /tmp/ccC5QXFb.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccC5QXFb.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccC5QXFb.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccC5QXFb.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccC5QXFb.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccC5QXFb.s:13     .text.matrix_init_kb:0000000000000000 matrix_init_kb
     /tmp/ccC5QXFb.s:33     .text.matrix_scan_kb:0000000000000000 matrix_scan_kb
     /tmp/ccC5QXFb.s:50     .text.process_record_kb:0000000000000000 process_record_kb
     /tmp/ccC5QXFb.s:68     .text.led_set_kb:0000000000000000 led_set_kb

UNDEFINED SYMBOLS
matrix_init_user
matrix_scan_user
process_record_user
led_set_user
